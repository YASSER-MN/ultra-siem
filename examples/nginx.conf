# Example Nginx Configuration for Ultra SIEM Demo
# This generates realistic web logs for testing

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Custom log format for SIEM ingestion
    log_format siem_format '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" '
                          '$request_time $upstream_response_time '
                          '$gzip_ratio "$http_x_forwarded_for"';

    # Log to stdout for Docker
    access_log /dev/stdout siem_format;
    error_log  /dev/stderr warn;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    server {
        listen 80;
        server_name localhost;
        
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # API simulation endpoints
        location /api/ {
            try_files $uri $uri/ @api;
        }

        location @api {
            if ($request_uri ~ ^/api/login) {
                return 200 '{"status":"success","token":"demo-token"}';
            }
            if ($request_uri ~ ^/api/users) {
                return 200 '{"users":[{"id":1,"name":"demo"}]}';
            }
            if ($request_uri ~ ^/api/admin) {
                return 403 '{"error":"Access denied"}';
            }
            return 404 '{"error":"Not found"}';
        }

        # Static files
        location / {
            try_files $uri $uri/ =404;
        }

        # Simulate some security events
        location /admin {
            return 401 "Unauthorized Access Attempt";
        }

        location /shell.php {
            return 404 "Potential Web Shell Access";
        }

        location /.env {
            return 403 "Environment File Access Blocked";
        }

        # Add security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    }
} 