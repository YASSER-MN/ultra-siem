# ðŸš€ Ultra SIEM - Quick Start Example
# This is a simplified configuration for getting started quickly
# For production use, see docker-compose.universal.yml

version: "3.8"

services:
  # Core SIEM Processing Engine
  siem-core:
    image: ultra-siem/rust-core:latest
    container_name: ultra-siem-core
    restart: unless-stopped
    environment:
      - RUST_LOG=info
      - SIEM_MODE=standalone
      - NATS_URL=nats://nats:4222
      - CLICKHOUSE_URL=http://clickhouse:8123
    ports:
      - "8080:8080" # API endpoint
    depends_on:
      - nats
      - clickhouse
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
    networks:
      - siem-network

  # Message Broker
  nats:
    image: nats:2.10-alpine
    container_name: ultra-siem-nats
    restart: unless-stopped
    ports:
      - "4222:4222" # Client connections
      - "8222:8222" # Management interface
    command:
      - "--jetstream"
      - "--store_dir=/data"
      - "--max_memory_store=1GB"
      - "--max_file_store=10GB"
    volumes:
      - nats_data:/data
    networks:
      - siem-network

  # Analytics Database
  clickhouse:
    image: clickhouse/clickhouse-server:23.8-alpine
    container_name: ultra-siem-clickhouse
    restart: unless-stopped
    environment:
      - CLICKHOUSE_DB=siem
      - CLICKHOUSE_USER=siem_user
      - CLICKHOUSE_PASSWORD=secure_password_123
    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native client
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./clickhouse/config.xml:/etc/clickhouse-server/config.xml:ro
      - ./clickhouse/users.xml:/etc/clickhouse-server/users.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - siem-network

  # Visualization Dashboard
  grafana:
    image: grafana/grafana:10.2.0
    container_name: ultra-siem-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - clickhouse
    networks:
      - siem-network

  # Log Collector (Vector)
  vector:
    image: timberio/vector:0.34.0-alpine
    container_name: ultra-siem-vector
    restart: unless-stopped
    volumes:
      - ./config/vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/log:/var/log:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - nats
    networks:
      - siem-network

  # Example Web Application (for generating test logs)
  demo-app:
    image: nginx:alpine
    container_name: demo-web-app
    restart: unless-stopped
    ports:
      - "8090:80"
    volumes:
      - ./examples/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./examples/html:/usr/share/nginx/html:ro
    networks:
      - siem-network

volumes:
  nats_data:
    driver: local
  clickhouse_data:
    driver: local
  grafana_data:
    driver: local

networks:
  siem-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
# ðŸ“‹ Quick Start Commands:
#
# 1. Start the entire stack:
#    docker-compose -f examples/docker-compose.example.yml up -d
#
# 2. Check service status:
#    docker-compose -f examples/docker-compose.example.yml ps
#
# 3. View logs:
#    docker-compose -f examples/docker-compose.example.yml logs -f siem-core
#
# 4. Access services:
#    - Grafana Dashboard: http://localhost:3000 (admin/admin123)
#    - SIEM API: http://localhost:8080
#    - ClickHouse: http://localhost:8123
#    - NATS: http://localhost:8222
#    - Demo App: http://localhost:8090
#
# 5. Stop everything:
#    docker-compose -f examples/docker-compose.example.yml down -v
#
# ðŸ“Š Default Credentials:
# - Grafana: admin / admin123
# - ClickHouse: siem_user / secure_password_123
#
# ðŸ”§ Configuration:
# - Modify ./config/ directory for custom settings
# - See ./config/vector/ for log collection setup
# - Check ./grafana/provisioning/ for dashboard config
